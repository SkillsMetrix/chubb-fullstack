package com.repo;

import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.CrudRepository;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.entity.Employee;
@Repository
// this class will provide useful methods to perform operations on DATABASE
public interface EmployeeRepo extends CrudRepository<Employee, Integer>{
	@Transactional
	@Modifying
	@Query("update Employee e set e.empProject=:empProject where e.empId=:empId")
	
	public int updateEmployee(@Param("empProject")String empProject,@Param("empId")int empId);

}
-------------


package com.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.entity.Employee;
import com.service.EmployeeService;

@RestController
@RequestMapping("/emp")
public class EmployeeController {
	@Autowired
	private EmployeeService service;
	@PostMapping("/addemp")
	public String addEmployee(@RequestBody Employee employee) {
		
		service.addEmployee(employee);
		return "Employee Added";
		
	}
	@GetMapping("/loadall")
	public List<Employee>loadAll(){
		return service.loadEmployees();
		
	}
	@GetMapping("/findemp/{id}")
	public String findEmp(@PathVariable int id) {
		if(service.findEmployee(id)) {
			return "Employee With " + id  +" found";
		}
		return "Employee not found";
		
	}

	@DeleteMapping("/deleteemp/{id}")
	public String deleteEmp(@PathVariable int id) {
		if(service.deleteEmployee(id)) {
			return "Employee With " + id  +" found and deleted";
		}
		return "Employee not found";
		
	}
	@PutMapping("/updateemp/{id}/{pname}")
	public String updateEmp(@PathVariable int id,@PathVariable String pname) {
		service.updateEmployee(pname,id);
		
		return "Employee updated";
		
	}
}
