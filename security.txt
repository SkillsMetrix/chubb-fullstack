package com.example.spring_security_app;

import java.util.ArrayList;
import java.util.List;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityApp {
	@Bean
	public InMemoryUserDetailsManager configAuth() {
		List<UserDetails> users = new ArrayList<UserDetails>();
		// adding Admin
		List<GrantedAuthority> authorities = new ArrayList<GrantedAuthority>();
		authorities.add(new SimpleGrantedAuthority("ADMIN"));
		UserDetails admin = new User("admin", "{noop}admin123", authorities);
		users.add(admin);
		// adding Manager
		List<GrantedAuthority> authoritiesM = new ArrayList<GrantedAuthority>();
		authoritiesM.add(new SimpleGrantedAuthority("MANAGER"));
		UserDetails manager = new User("manager", "{noop}manager123", authoritiesM);
		users.add(manager);

		// adding Employee
		List<GrantedAuthority> authoritiesE = new ArrayList<GrantedAuthority>();
		authoritiesE.add(new SimpleGrantedAuthority("EMPLOYEE"));
		UserDetails employee = new User("employee", "{noop}employee123", authoritiesE);
		users.add(employee);
		return new InMemoryUserDetailsManager(users);
	}

	@Bean
	public SecurityFilterChain securityFilterChain(HttpSecurity security) throws Exception {

		security.authorizeHttpRequests(auth -> auth.requestMatchers("/home").permitAll())

		;
		return security.build();
	}
}
