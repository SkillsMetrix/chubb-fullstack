import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';

@Injectable({
  providedIn: 'root'
})
export class AppserviceService {

  constructor(private http:HttpClient){
     
  }

  addUser(data: any) {
    console.log(data);
    this.http.post("http://localhost:8090/emp/addemp",data)
    .subscribe((data)=>{
      console.log(data);
      
    })

  }

  
}

----------------

import { provideHttpClient } from '@angular/common/http';
import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';
 
 
export const appConfig: ApplicationConfig = {
  providers: [provideHttpClient(),provideZoneChangeDetection({ eventCoalescing: true })]
};


---------------

import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';
import { AppserviceService } from '../../appservice.service';

@Component({
  selector: 'app-reactiveapp',
  standalone: true,
  imports: [FormsModule, CommonModule, ReactiveFormsModule],
  templateUrl: './reactiveapp.component.html',
  styleUrl: './reactiveapp.component.css'
})
export class ReactiveappComponent {
  myForm: FormGroup
  empName: FormControl
  empEmail: FormControl
  empCity: FormControl

  createFormControls() {
    this.empName = new FormControl('',Validators.required)
    this.empEmail = new FormControl('',[Validators.required,Validators.email])
    this.empCity = new FormControl('',[Validators.required,Validators.minLength(6)])
  }
  createForm() {
    this.myForm = new FormGroup({
      empName: this.empName,
      empEmail: this.empEmail,
      empCity: this.empCity
    })
  }
  constructor(private service:AppserviceService){
    this.createFormControls()
    this.createForm()
  }
  addUser() {
     
    this.service.addUser(this.myForm.value)
    

  }
}

---------------

<div class="bg-gray-100 p-10">
    <div class="max-w-lg mx-auto  bg-white p-6 rounded-lg shadow-md">

        <h4 style="text-align: center;" class="font-bold mb-4">Employee CRUD Application</h4>

        <div class="mb-4">
            <form (ngSubmit)="addUser()" [formGroup]="myForm">
                <input type="text" name="empname" class="w-full p-2 rounded mb-2" formControlName="empName"
                    placeholder="Enter Employee Name">

                <div *ngIf="empName.invalid &&( empName.dirty || empName.touched)">
                    <div *ngIf="empName.hasError('required')">
                        <p>Name cant be empty</p>
                    </div>

                </div>
                <input type="email" class="w-full p-2 rounded mb-2" placeholder="Enter Email"
                    formControlName="empEmail">

                <div *ngIf="empEmail.invalid &&( empEmail.dirty || empEmail.touched)">
                    <div *ngIf="empEmail.hasError('required')">
                        <p>Email cant be empty</p>
                    </div>
                    <div *ngIf="empEmail.hasError('email')">
                        <p>Email must be formatted</p>
                    </div>
                </div>
                <input type="text" class="w-full p-2 rounded mb-2" placeholder="Enter Employee city"
                    formControlName="empCity">


                <div *ngIf="empCity.invalid &&( empCity.dirty || empCity.touched)">
                    <div *ngIf="empCity.hasError('required')">
                        <p>city cant be empty</p>
                    </div>
                    <div *ngIf="empCity.hasError('minlength')">
                        <p>cit must be 6 char long</p>
                    </div>
                </div>
                <button [disabled]="myForm.invalid" class="mt-2 w-full bg-blue-600 p-2 rounded">Add Employee</button>

            </form>
        </div>

        <table class="w-full border-collapse border border-pink-200 mt-4">
            <thead>
                <tr class="bg-pink-400">
                    <th class="border border-gray-300 p-2">ID</th>
                    <th class="border border-gray-300 p-2">Name</th>
                    <th class="border border-gray-300 p-2">City</th>
                    <th class="border border-gray-300 p-2">Action</th>
                </tr>
            </thead>
            <tbody id="emplist"></tbody>
        </table>
    </div>






</div>
